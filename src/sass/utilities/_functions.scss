@function shades($colors) {
  $shades: ();
  $length: 11;

  @each $key, $color in $colors {
    $i: 1;
    $shade: '';

    @if index(
      (transparent, current, white, black, inherit, current, transparent),
      $key
    )
    {
      $shades: map-merge($shades, (#{$key}: #{$color}));
    } @else {
      @while $i <= $length {
        @if $i < 4 {
          $shade: mix($color, black, (($i * 3) * 10%));
        } @else if $i == 4 {
          $shade: $color;
        } @else if $i < 8 {
          $shade: mix($color, white, (($length - $i) * 14%));
        } @else {
          $shade: mix($color, white, (($length - ($i - 0.6)) * 10%));
        }

        $prefix: if($i < 10, $i * 10, if($i == 10, 95, 100));
        $shades: map-merge($shades, (#{$key}-#{$prefix}: #{$shade}));

        $i: $i + 1;
      }
    }
  }

  @return $shades;
}
